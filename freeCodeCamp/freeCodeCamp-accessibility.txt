1. alt
An alt attribute helps in cases where the image fails to load or can't be seen by a user. 
Search engines also use it to understand what an image contains to include it in search results. 
Here's an example:
<img src="importantLogo.jpeg" alt="Company logo">

sometimes images are grouped with a caption already describing them, or are used for decoration only. 
In these cases, alt text may seem redundant or unnecessary.
也就是说，当图片已经有别的标题，或者只是装饰作用，alt可能就是冗余的或者没有必要的。

When an image is already explained with text content or does not add meaning to a page, 
the img still needs an alt attribute, but it can be set to an empty string. Here's an example:
<img src="visualDecoration.jpeg" alt="">
这时候如果图片加载不出来则不会显示加载不出来的图标。

2. h tag
One final point, each page should always have one (and only one) h1 element, which is the main subject of your content.
This and the other headings are used in part by search engines to understand the topic of the page.

a page with an h2 element followed by several subsections labeled with h4 tags would confuse a screen reader user.
即h2后面不要接h4, 应该接h3,按顺序来。

3. h5语义化标签
a browser renders these elements similar to the humble div. 
However, using them where appropriate gives additional meaning to your markup. 
The tag name alone can indicate the type of information it contains, 
which adds semantic meaning to that content. 
Assistive technologies can access this information to provide better page summary or navigation options to their users.

1) 结构：
<header>
  <h1>Weapons of the Ninja</h1>
</header>
  <main>
    
  </main>

<footer></footer>

header shares the embedded landmark feature you saw with main, 
allowing assistive technologies to quickly navigate to that content.
The header is meant for use in the body tag of your HTML document. 
It is different than the head element, which contains the page's title, meta information, etc.

the footer element has a built-in landmark feature that allows assistive devices to quickly navigate to it. 
It's primarily used to contain copyright information or links to related documents that usually sit at the bottom of a page.

2) article、section
article is another one of the new HTML5 elements that add semantic meaning to your markup. 
article is a sectioning element and is used to wrap independent, self-contained content. 
The tag works well with blog entries, forum posts, or news articles.

The section element is also new with HTML5, and has a slightly different semantic meaning than article. 
An article is for standalone content, and a section is for grouping thematically related content.
They can be used within each other, as needed. For example, if a book is the article, then each chapter is a section. 
When there's no relationship between groups of content, then use a div.

3) nav
The nav element is another HTML5 item with the embedded landmark feature for easy screen reader navigation. 
This tag is meant to wrap around the main navigation links in your page.


4) audio
HTML5's audio element gives semantic meaning when it wraps sound or audio stream content in your markup. 
Audio content also needs a text alternative to be accessible to people who are deaf or hard of hearing.
This can be done with nearby text on the page or a link to a transcript.

The audio tag supports the controls attribute. This shows the browser default play, pause, and other controls, 
and supports keyboard functionality. This is a boolean attribute, meaning it doesn't need a value, 
its presence on the tag turns the setting on.

example 1:
<audio id="meowClip" controls>
  <source src="audio/meow.mp3" type="audio/mpeg">
  <source src="audio/meow.ogg" type="audio/ogg">
</audio>

Note: Multimedia content usually has both visual and auditory components. 
It needs synchronized captions and a transcript so users with visual and/or auditory impairments can access it. 
Generally, a web developer is not responsible for creating the captions or transcript, but needs to know to include them.

example 2:
<body>
  <header>
    <h1>Real Coding Ninjas</h1>
  </header>
  <main>
    <p>A sound clip of Zersiax's screen reader in action.</p>
    <audio controls>
      <source src="https://s3.amazonaws.com/freecodecamp/screen-reader.mp3" type="audio/mpeg">
    <audio>
  </main>
</body>

5) figure
HTML5 introduced the figure element and the related figcaption. Used together, 
these items wrap a visual representation (like an image, diagram, or chart) along with its caption.

Wrapping these elements together gives a two-fold accessibility boost by semantically grouping related content 
and providing a text alternative(可选择的、备选的、可替代的) explaining the figure.

example:
<figure>
  <img src="roundhouseDestruction.jpeg" alt="Photo of Camper Cat executing a roundhouse kick">
  <br>
  <figcaption>
    Master Camper Cat demonstrates proper form of a roundhouse kick.
  </figcaption>
</figure>

6) label for
<form>
  <label for="name">Name:</label>
  <input type="text" id="name" name="name">
</form>
label的for关联input的id

7) fieldset
The fieldset tag surrounds the entire grouping of radio buttons to achieve this. 
It often uses a legend tag to provide a description for the grouping, which screen readers read for each choice
in the fieldset element.

The fieldset wrapper and legend tag are not necessary when the choices are self-explanatory, like a gender selection.
Using a label with the for attribute for each radio button is sufficient.

Here's an example:

<form>
  <fieldset>
    <legend>Choose one of these three items:</legend>
    <input id="one" type="radio" name="items" value="one">
    <label for="one">Choice One</label><br>
    <input id="two" type="radio" name="items" value="two">
    <label for="two">Choice Two</label><br>
    <input id="three" type="radio" name="items" value="three">
    <label for="three">Choice Three</label>
  </fieldset>
</form>

8) date
<input type="date" id="pickdate" name="date">
可用于选择日期

9) time
HTML5 also introduced the time element along with a datetime attribute to standardize times. 
The time element is an inline element that can wrap a date or time on a page. 

A datetime attribute holds a valid format of that date. This is the value accessed by assistive devices. 
It helps avoid confusion by stating a standardized version of a time, 
even if it's informally or colloquially written in the text.

例子：
<time datetime="2016-09-15">Thursday, September 15<sup>th</sup></time>

10) CSS's magic can also improve accessibility on your page when you want to visually hide content meant
only for screen readers.

This happens when information is in a visual format (like a chart), but screen reader users need an 
alternative presentation (like a table) to access the data. 
CSS is used to position the screen reader-only elements off the visual area of the browser window.

.sr-only {
    position: absolute;
    left: -10000px;
    width: 1px;
    height: 1px;
    top: auto;
    overflow: hidden;
}

Note: The following CSS approaches will NOT do the same thing:
display: none; or visibility: hidden; hides content for everyone, including screen reader users;
Zero values for pixel sizes, such as width: 0px; height: 0px; removes that element from the flow of your document,
meaning screen readers will ignore it.

11) Improve Readability with High Contrast Text
The Web Content Accessibility Guidelines (WCAG) recommend at least a 4.5 to 1 contrast ratio for normal text. 
The ratio is calculated by comparing the relative luminance(相对亮度) values of two colors. 
This ranges from 1:1 for the same color, or no contrast, to 21:1 for white against black, the most substantial contrast. 
There are many contrast checking tools available online that calculate this ratio for you.

12) Avoid Colorblindness Issues by Using Sufficient Contrast
First, color alone should not be used as the only way to convey important information because screen reader users won't see it. 
Second, foreground and background colors need sufficient contrast so colorblind users can distinguish them.
背景色和内容颜色要分明，不要把颜色作为唯一传递重要信息的途径。

The WCAG-recommended contrast ratio of 4.5:1 applies for color use as well as gray-scale combinations.

In practice, the 4.5:1 contrast ratio can be reached by shading (adding black to) the darker color 
and tinting (adding white to) the lighter color. 
Darker shades on the color wheel are considered to be shades（色调） of blues, violets（紫罗兰）, magentas（洋红色）, and reds, 
whereas lighter tinted colors are oranges, yellows, greens, and blue-greens.

深色背景+浅色文字  vs 浅色背景+深色文字

13) Carefully Choosing Colors that Convey Information
The most common form is a reduced sensitivity to detect greens. 因为要考虑红绿色盲用户。
Note: Some online color picking tools include visual simulations of how colors appear for different types of colorblindness. 
These are great resources in addition to online contrast checking calculators.

14) Give Links Meaning by Using Descriptive Link Text
Having a list of "click here" or "read more" links isn't helpful. 
Instead, use brief but descriptive text within the a tags to provide more meaning for these users.

15) accesskey
HTML offers the accesskey attribute to specify a shortcut key to activate or bring focus to an element. 
Adding an accesskey attribute can make navigation more efficient for keyboard-only users.
Here's an example:
<button accesskey="b">Important Button</button>
也可以用于a标签等

15) tabindex
The HTML tabindex attribute has three distinct functions relating to an element's keyboard focus. 
When it's on a tag, it indicates that the element can be focused on. 
The value (an integer that's positive, negative, or zero) determines the behavior.

Certain elements, such as links and form controls, automatically receive keyboard focus when a user tabs through a page. 
It's in the same order as the elements come in the HTML source markup. 
This same functionality can be given to other elements, such as div, span, and p, by placing a tabindex="0" attribute on them. 
Here's an example:

<style>
p:focus {
  background-color: yellow;
}
</style>
<p tabindex="0">Instructions: Fill in ALL your information then click <b>Submit</b></p>
你按键盘的Tab建的时候，就会foucs上去。数值越低，优先级越高。

Note: A negative tabindex value (typically -1) indicates that an element is focusable, but is not reachable by the keyboard. 
This method is generally used to bring focus to content programmatically 
(like when a div used for a pop-up window is activated), and is beyond the scope of these challenges.