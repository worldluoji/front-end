apiVersion: apps/v1
kind: Deployment    #类型是一个Deployment
metadata:
  name: nginx-deployment  #唯一标识
spec:
  selector:
    matchLabels:
      app: nginx   #说明该Deplpyment管理所有携带app:nginx标签的POD
  replicas: 2      #副本数为2，即创建两个POD
  template:
    metadata:
      labels:
        app: nginx   #pod标签为app:ngnix
    spec:
      containers:    #容器相关配置
      - name: nginx
        image: nginx:1.23.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html   #配置镜像中挂载的路径
          name: nginx-vol
        - mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          name: nginx-config
        - mountPath: /usr/local/nginx/cache
          name: cache
      volumes:                                 #宿主机中的路径
      - name: nginx-vol
        hostPath:
          path: /usr/luoji/k8s/nginx/index    # nginx静态文件路径， for windows : "/d/jscssh5/js/nginx/kubernates nginx yamls/index"
          type: DirectoryOrCreate
      - name: nginx-config
        configMap:
          name: nginx-config
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: cache
        hostPath:
          path: /usr/luoji/k8s/nginx/cache #缓存路径， windows可以这样写，比如f盘 /f/temp
          type: DirectoryOrCreate

# 为此，我定义了一个 Pod 模版（spec.template），这个模版描述了我想要创建的 Pod 的细节。
# 在上面的例子里，这个 Pod 里只有一个容器，这个容器的镜像（spec.containers.image）是 nginx:1.23.0，
# 这个容器监听端口（containerPort）是 80。

# 如果使用minikube, 需要手动先mount 主机与minikube node文件目录的映射关系
# For example, this would mount your home directory to appear as /host within the minikube VM:
# minikube mount $HOME:/host

# minikube ssh 可查看挂载的文件
# minikube mount /usr/luoji/k8s/nginx:/usr/luoji/k8s/nginx
# https://github.com/kubernetes/minikube/issues/8202
